编写一个猥琐的反爬虫系统是怎样一种体验
# 介绍自己， 介绍猥琐的团队。 
# 创建过程。 各种人才迅速组合成新团队。 老大支持。 驳斥技术氛围。 
# 吐槽自称有各种培训的， 不一定是技术氛围后。 
# 介绍自己在人人网刷人气哄妹子的故事。 强调连自己老婆也不知道这个事情。 
# 介绍团队有人大学期间改自己成绩。 
# 强调有妹子爬携程数据。 留伏笔给后面。 
# 强调过年回来， 团队都是牧师。 

为什么要反爬虫
爬虫占总PV比例较高，这样浪费钱(尤其是三月份爬虫)。
# 插入毕业生的12点故事。 强调我们的实习生是好学生， 提前一年就准备了。 
# 给校招打广告。 
# 结束妹子的伏笔。  强调妹子有男朋友。 
公司可免费查询的资源被批量抓走， 丧失竞争力， 这样少赚钱。
# OTA的价格可以在非登录状态下直接被查询， 这个是底线， 如果强制登陆， 那么可以通过封杀账号的方式让对方付出代价。 这也是很多网站的做法。 
爬虫是否涉嫌违法？ 如果是的话， 是否可以起诉要求赔偿？ 这样可以赚钱。

反什么样的爬虫
十分低级的应届毕业生
# 再次赞扬我们的实习生是好学生。 
# 插入校招链接。 顺便说下， 爬携程这条路已经行不通了。 第一个说花漂亮的是天才。 
十分低级的创业小公司
# 吐个槽， 现在的创业公司越来越多， 也不知道是被谁忽悠的
不小心写错了没人去停止的失控小爬虫
# 点评有的时候可能高达60%的访问量是爬虫。 已经直接封锁了， 依然孜孜不倦地爬取。 
成型的商业对手
#比如前一阵子有妹子找我， 问我是不是负责反爬虫的。 我说是， 她说， 最近美。。 停顿， 有个公司在爬我们价格， 问我们能不能直接封锁。 我们发现量还不大， 说等等， 养肥了再说。 因为所谓的反爬虫， 并不是一定把所有的请求都拦下来就厉害。 这就像打游戏， 有时候也需要诈败， 骗对方。 有可能是出于战略目的， 不以一场战斗做为输赢的关键。 
抽风的搜索引擎
# 大家不要以为搜索引擎都是好人， 也有抽风的时候， 而且一抽风就会导致性能下降。 
# 吐槽： 尤其是现在阿猫阿狗的都跟风做搜索引擎， 搞得我们还以为别人冒充搜索引擎来爬我们， 差点直接封掉了。后来得知真的是搜索引擎。 我当时的感觉， 就跟个麻风侏儒一样。 
# 提问： 大家知道麻风侏儒是什么样的吗？ （放音效） 
定义
爬虫 : 使用任何技术手段， 批量获取网站信息的一种方式。
反爬虫 : 使用任何技术手段， 阻止别人批量获取自己网站信息的一种方式。
误伤 : 在反爬虫的过程中， 错误的将普通用户识别为爬虫。
拦截 : 成功地阻止爬虫访问。
资源 : 机器成本与人力成本的总和。
知己知彼： 如何编写简单爬虫

分析页面请求格式
创建合适的http请求
批量发送http请求， 获取数据
# 直接查看携程生产url。 数据量排序。 
# 数据量最大的必然在上面。 
# 强调TestMessageFromButterfly， 伏笔
# 提问， 为什么是butterfly。 你们先想，我继续讲我的了。 

知己知彼： 如何编写高级爬虫

分布式(我们只是为了防止封IP而已， 不要多想)
模拟JavaScript
PhantomJs
优缺点
越是低级的爬虫，越容易被封锁， 但是性能好， 成本低。
越是高级的爬虫， 越难被封锁， 但是性能低， 成本也越高。
当成本高到一定程度， 我们就可以无需再对爬虫进行封锁。
# 强调， 边际效应。 双方资源对比。 

如何设计一个反爬虫系统(常规架构)
对请求进行预处理， 便于识别
识别是否是爬虫
针对识别结果， 进行适当的处理。
上一页是逗你玩的
如果能识别出爬虫， 哪还有那么多废话？想怎么搞它就怎么搞它
如果识别不出来爬虫， 你对谁做适当处理？
三句话里面有两句是废话， 只有一句有用的。 而且还没给出具体实施方式。
这种架构(师)有什么用？
# 吐槽当前架构师崇拜问题。 以及创业小公司以架构师名义招开发。 
# 初级架构师问题。 架构师本身就是个高级岗位， 为什么会有初级架构。 
# 相当于： 初级将军。 初级司令。 
# 顺便吐槽小创业公司甚至招CTO做开发。 
传统反爬虫手段
后台对访问进行统计， 如果单个IP访问超过阈值， 予以封锁。
后台对访问进行统计， 如果单个session访问超过阈值， 予以封锁。
后台对访问进行统计， 如果单个userAgent访问超过阈值， 予以封锁。
# 强调， IP价格按月支付， 大概和打wow的点卡费用差不多。
# 插入端口扫描小技巧。  
# 强调验证码价格， 1分到3分一个的都有。 人工打。 
# 插入吐槽， 爬虫其实是个游戏， RMB玩家比较容易玩。 
# 雇佣印度人， 可以百分百拿到数据， 几乎无法阻止。 这就是RMB玩家的 优势。 

以上的组合
效果均一般， 所以还是用JavaScript比较靠谱
# 强调JavaScript不仅仅是做前端。 跳过前端不等于跳过JavaScript。 
# 强调我就是标题党。 


# 思考题： 我们写代码的时候， 最怕碰到什么代码？ 
# 什么代码不好调试？ 
# 1 eval
# 2 goto
# 3 混淆。 
# 4 不稳定。 

纯JAVASCRIPT反爬虫DEMO
更改连接地址
# 演示。 强调简单。 强调容易被发现。 
纯JAVASCRIPT反爬虫DEMO
更改key
# 演示。 强调简单， 不容易被发现。 介绍如何被发现(有意爬取错误价格)
纯JAVASCRIPT反爬虫DEMO
更改动态key
纯JAVASCRIPT反爬虫DEMO
十分复杂的更改key
# 强调到此为止， 再次重申边际效应， 重申资源对比。 

浏览器检测
检测IE 的bug
检测FF的严格
检测Chrome的强大特性
我抓到你了——然后该怎么办
# 你就让我嘿嘿嘿。 
# 污。 身处猥琐环境， 想不猥琐都难。 

不会引发生产事件——直接拦截
可能引发生产事件——给假数据(也叫投毒)
# 强调SQL 注入问题。 法务没有给回复。 因为不好和她解释。 

技术压制
DotA AI： de命令
当AI被击杀后， 它获取经验的倍数会提升。
因此， 前期杀AI太多， AI会一身神装， 无法击杀。
正确的做法是， 压制对方等级， 但是不击杀。


心理战
挑衅
怜悯
嘲讽
猥琐

#插入过年12点的故事。
#回顾TestMessageFromButterfly 的伏笔。 展示图片

放水
程序员都不容易
做爬虫的尤其不容易
可怜可怜他们给他们一小口饭吃吧。 没准过几天你就因为反爬虫做得好， 改行做爬虫了